#!/bin/bash
##timeset- A script-utility to configure the system date and time on Manjaro/Arch Linux(or any Linux distribution that uses systemd)
##Author- Aaditya Bagga

# Gettext internationalization
export TEXTDOMAIN="timeset"
export TEXTDOMAINDIR="/usr/share/locale"

ROOT_UID=0 # Only users with $UID 0 have root privileges.
E_NOTROOT=87 # Non-root exit error.

#Colors
Blue="\e[1;34m"
Yel="\e[1;33m"
Green="\e[1;32m"
Red="\e[1;31m"
White="\e[1;37m"
CLR="\e[0m"

# Run as root, of course.
if [ "$UID" -ne "$ROOT_UID" ]
then
echo "$(gettext 'Must be root to run this script')"
  exit $E_NOTROOT
fi


#The Menu
ent=echo -e "\n$(gettext 'Press Enter. . .')"

while :
 do
clear
    echo "------------------------------------------------------------------------------"
    echo -e $Blue "$(gettext ' TimeSet(tings) - Configure the system date and time')" $CLR
    echo "------------------------------------------------------------------------------"
    echo ""
    echo -e $Yel "[1] " $White "$(gettext 'Show current date and time configuration')" $CLR
    echo -e $Yel "[2] " $White "$(gettext 'Show known timezones (press q to return to menu)')" $CLR 
    echo -e $Yel "[3] " $White "$(gettext 'Set system timezone')" $CLR
    echo -e $Yel "[4] " $White "$(gettext 'Synchronize time from the network (NTP)')" $CLR
    echo -e $Yel "[5] " $White "$(gettext 'Choose whether NTP is enabled or not')" $CLR 
    echo -e $Yel "[6] " $White "$(gettext 'Control whether hardware clock is in local time or not')" $CLR
    echo -e $Yel "[7] " $White "$(gettext 'Read the time from the hardware clock')" $CLR
    echo -e $Yel "[8] " $White "$(gettext 'Synchronize hardware clock to system time')" $CLR
    echo -e $Yel "[9] " $White "$(gettext 'Synchronize system time to hardware clock')" $CLR
    echo -e $Yel "[10]" $White "$(gettext 'Set system time manually')" $CLR
    echo ""
    echo -e $Red "[q]   $(gettext 'Exit/Quit')\n" $CLR
    echo "==========================================================="
    echo -ne $Green "$(gettext 'Enter your choice') [1-10,q]:" $CLR
    read choice
    case $choice in
      1) echo -e "\e[1;37mCurrent date and time\e[0m"; timedatectl status; $ent ; read;;
      2) echo -e "\e[1;32mTimezones\e[0m";timedatectl list-timezones ;;
      3) echo -ne "\e[1;37mEnter the timezone (It should be like Continent/City):\e[0m " ; read tz ; timedatectl set-timezone $tz ; $ent ; read ;;
      4) echo -e "\e[1;32mSynchronizing time from the network. \n\e[1;32mNTP should be installed for this to work.\e[0m"; printf "Please wait a few moments while the time is being synchronised..\n\n"; ntpdate -u pool.ntp.org; $ent ; read ;;
      5) echo -ne "\e[1;32m\nIf NTP is enabled the system will periodically synchronize time from the network.\e[0m\n\e[1;37mEnter 1 to enable NTP and 0 to disable NTP :\e[0m "; read ntch; timedatectl set-ntp $ntch; $ent; read ;;
      6) echo -ne "\e[1;37mEnter 0 to set hardware clock to UTC and 1 to set it to local time :\e[0m "; read rtcch; timedatectl set-local-rtc $rtcch; $ent; read ;;
      7) hwclock -D ; $ent; read ;;
      8) hwclock -w ; $ent; read ;;
      9) hwclock -s ; $ent; read ;;
      10) echo -ne "\e[1;32m\e[1;32mEnter the time.\nThe time may be specified in the format 2012-10-30 18:17:16 \nOnly hh:mm can also be used.\e[0m \n\e[1;37mEnter time:\e[0m "; read time; timedatectl set-time $time; $ent; read ;;
      q) exit 0 ;;
      *) echo -e "\e[1;31mOops!!! Please a valid choice!\e[0m ";#!/bin/bash
         echo -e "\e[1;37mPress Enter. . .\e[0m" ; read ;;
 esac
done
exit 0


